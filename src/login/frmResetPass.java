/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package login;

import connectionDB.*;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import rsscalelabel.RSScaleLabel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.ImageIcon;

/**
 *
 * @author Wiliam
 */
public class frmResetPass extends javax.swing.JFrame {

    private boolean isPasswordVisible = false;
    /**
     * Creates new form frm
     */
    public frmResetPass() {
        initComponents();
        designframe();
        imagesdesign();
        showdatetime();
        showtextpassdesign();
    }
    
    public void connection() {
        connectionDB connection = new connectionDB();
        java.sql.Connection conn = connection.Open();

        if (conn == null) {
            System.out.println("Error de Conexión");
        } else {
            System.out.println("Conexión Exitosa");
        }
    }
    
    public void designframe(){
        getContentPane().setBackground(new Color(217, 250, 251));
        //setIconImage(new ImageIcon(getClass().getResource("/images/logo.png")).getImage());
        setIconImage(new ImageIcon("images/logo.png").getImage());
    }
    
    public void imagesdesign() {
        RSScaleLabel.setScaleLabel(jlblpass, "./images/mostrar.png");
        RSScaleLabel.setScaleLabel(jlblconfpass, "./images/mostrar.png");
        RSScaleLabel.setScaleLabel(jlbldesign, "./images/diseño.png");
    }
    
    public void showdatetime() {
        // Mostrar Fecha y Hora en los jlabels
        SimpleDateFormat dateFormat = new SimpleDateFormat("EEEE dd 'de' MMMM 'de' yyyy", new Locale("es", "ES"));
        String date = dateFormat.format(new Date());
        SimpleDateFormat timeFormat = new SimpleDateFormat("hh:mm:ss a", new Locale("es", "ES"));
        String time = timeFormat.format(new Date()).toLowerCase(); // Convierte "PM" a "pm"
        jlbldatetime1.setText("Guatemala, " + date + ", " + time);
    }
    
    public void showtextpassdesign() {
        jtxfpass.setText("Ingrese su Contraseña");
        jtxfpass.setEchoChar((char) 0);
        jtxfpass.setForeground(new Color(999999));
        jtxfconfpass.setText("Confirme su Contraseña");
        jtxfconfpass.setEchoChar((char) 0);
        jtxfconfpass.setForeground(new Color(999999));
        jtxfmail.setText("Ingrese su Email");
        jtxfmail.setForeground(new Color(999999));
    }
    
    // Método para validar si el email tiene un formato válido
    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        return email.matches(emailRegex);
    }
    
    // Método para encriptar la contraseña usando la clave murciélago
    private String encryptPassword(String password) {
        String clave = "murcielago";
        String reemplazo = "0123456789";
        StringBuilder encriptada = new StringBuilder();

        for (char c : password.toLowerCase().toCharArray()) {
            int index = clave.indexOf(c);
            if (index != -1) {
                encriptada.append(reemplazo.charAt(index));
            } else {
                encriptada.append(c);  // Si el carácter no está en la clave, dejarlo como está
            }
        }

        return encriptada.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbldatetime1 = new javax.swing.JLabel();
        jlblresetpasst = new javax.swing.JLabel();
        jlblpass = new javax.swing.JLabel();
        jtxfpass = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jtxfuser = new javax.swing.JTextField();
        jlblconfpass = new javax.swing.JLabel();
        jtxfconfpass = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtxfmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jbtnresetpass = new javax.swing.JButton();
        jlbldesign = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menú");
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbldatetime1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jlbldatetime1.setForeground(new java.awt.Color(255, 255, 255));
        jlbldatetime1.setText("Fecha y Hora");
        getContentPane().add(jlbldatetime1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 7, 370, 20));

        jlblresetpasst.setFont(new java.awt.Font("Isle Headline PERSONAL USE", 1, 30)); // NOI18N
        jlblresetpasst.setForeground(new java.awt.Color(0, 0, 102));
        jlblresetpasst.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblresetpasst.setText("Recuperar Contraseña");
        getContentPane().add(jlblresetpasst, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 350, -1));

        jlblpass.setText("pass");
        jlblpass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlblpass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblpassMouseClicked(evt);
            }
        });
        getContentPane().add(jlblpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 221, 40, 30));

        jtxfpass.setBackground(new java.awt.Color(242, 255, 255));
        jtxfpass.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jtxfpass.setForeground(new java.awt.Color(0, 51, 153));
        jtxfpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxfpassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxfpassFocusLost(evt);
            }
        });
        getContentPane().add(jtxfpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 221, 310, 30));

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Contraseña:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 181, 110, -1));

        jtxfuser.setBackground(new java.awt.Color(242, 255, 255));
        jtxfuser.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jtxfuser.setForeground(new java.awt.Color(0, 51, 153));
        jtxfuser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxfuserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxfuserFocusLost(evt);
            }
        });
        getContentPane().add(jtxfuser, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 141, 350, 30));

        jlblconfpass.setText("pass");
        jlblconfpass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlblconfpass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblconfpassMouseClicked(evt);
            }
        });
        getContentPane().add(jlblconfpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 301, 40, 30));

        jtxfconfpass.setBackground(new java.awt.Color(242, 255, 255));
        jtxfconfpass.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jtxfconfpass.setForeground(new java.awt.Color(0, 51, 153));
        jtxfconfpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxfconfpassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxfconfpassFocusLost(evt);
            }
        });
        getContentPane().add(jtxfconfpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 301, 310, 30));

        jLabel7.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Confirmar Contraseña:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 261, 220, -1));

        jLabel8.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 153));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Correo Electronico:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 341, 180, -1));

        jtxfmail.setBackground(new java.awt.Color(242, 255, 255));
        jtxfmail.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jtxfmail.setForeground(new java.awt.Color(0, 51, 153));
        jtxfmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxfmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxfmailFocusLost(evt);
            }
        });
        getContentPane().add(jtxfmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 381, 350, 30));

        jLabel9.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 153));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Usuario:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 101, 80, -1));

        jbtnresetpass.setBackground(new java.awt.Color(0, 0, 204));
        jbtnresetpass.setFont(new java.awt.Font("Gill Sans Ultra Bold", 1, 14)); // NOI18N
        jbtnresetpass.setForeground(new java.awt.Color(255, 255, 255));
        jbtnresetpass.setText("Recuperar");
        jbtnresetpass.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnresetpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnresetpassActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnresetpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 421, 130, 40));

        jlbldesign.setText("Design");
        jlbldesign.setAlignmentY(0.0F);
        getContentPane().add(jlbldesign, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 0, 415, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlblpassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblpassMouseClicked
        // TODO add your handling code here:
        // Alternar entre mostrar y ocultar la contraseña
        if (isPasswordVisible) {
            RSScaleLabel.setScaleLabel(jlblpass, "./images/ocultar.png");
            jtxfpass.setEchoChar('*'); // Ocultar el texto
        } else {
            RSScaleLabel.setScaleLabel(jlblpass, "./images/mostrar.png");
            jtxfpass.setEchoChar((char) 0); // Mostrar el texto
        }
        isPasswordVisible = !isPasswordVisible; // Cambiar el estado
    }//GEN-LAST:event_jlblpassMouseClicked

    private void jtxfpassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfpassFocusGained
        // TODO add your handling code here:
        if (new String(jtxfpass.getPassword()).equals("Ingrese su Contraseña")) {
            jtxfpass.setText("");
            jtxfpass.setEchoChar('*'); // Asegurarse de que el campo vuelva a ocultar el texto
            jtxfpass.setForeground(new Color(0, 51, 153));
        }
    }//GEN-LAST:event_jtxfpassFocusGained

    private void jtxfpassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfpassFocusLost
        // TODO add your handling code here:
        if (new String(jtxfpass.getPassword()).isEmpty()) {
            jtxfpass.setText("Ingrese su Contraseña");
            jtxfpass.setEchoChar((char) 0); // Desactiva el ocultamiento de texto para mostrar el mensaje
            jtxfpass.setForeground(new Color(999999)); // Color gris claro
        }
    }//GEN-LAST:event_jtxfpassFocusLost

    private void jtxfuserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfuserFocusGained
        // TODO add your handling code here:
        if (jtxfuser.getText().equals("Ingrese su Usuario")) {
            jtxfuser.setText("");
            jtxfuser.setForeground(new Color(0, 51, 153));
        }
    }//GEN-LAST:event_jtxfuserFocusGained

    private void jtxfuserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfuserFocusLost
        // TODO add your handling code here:
        if (jtxfuser.getText().isEmpty()) {
            jtxfuser.setText("Ingrese su Usuario");
            jtxfuser.setForeground(new Color(999999));
        }
    }//GEN-LAST:event_jtxfuserFocusLost

    private void jlblconfpassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblconfpassMouseClicked
        // TODO add your handling code here:
        // Alternar entre mostrar y ocultar la contraseña
        if (isPasswordVisible) {
            RSScaleLabel.setScaleLabel(jlblconfpass, "./images/ocultar.png");
            jtxfconfpass.setEchoChar('*'); // Ocultar el texto
        } else {
            RSScaleLabel.setScaleLabel(jlblconfpass, "./images/mostrar.png");
            jtxfconfpass.setEchoChar((char) 0); // Mostrar el texto
        }
        isPasswordVisible = !isPasswordVisible; // Cambiar el estado
    }//GEN-LAST:event_jlblconfpassMouseClicked

    private void jtxfconfpassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfconfpassFocusGained
        // TODO add your handling code here:
        if (new String(jtxfconfpass.getPassword()).equals("Confirme su Contraseña")) {
            jtxfconfpass.setText("");
            jtxfconfpass.setEchoChar('*'); // Asegurarse de que el campo vuelva a ocultar el texto
            jtxfconfpass.setForeground(new Color(0, 51, 153));
        }
    }//GEN-LAST:event_jtxfconfpassFocusGained

    private void jtxfconfpassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfconfpassFocusLost
        // TODO add your handling code here:
        if (new String(jtxfconfpass.getPassword()).isEmpty()) {
            jtxfconfpass.setText("Confirme su Contraseña");
            jtxfconfpass.setEchoChar((char) 0); // Desactiva el ocultamiento de texto para mostrar el mensaje
            jtxfconfpass.setForeground(new Color(999999)); // Color gris claro
        }
    }//GEN-LAST:event_jtxfconfpassFocusLost

    private void jtxfmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfmailFocusGained
        // TODO add your handling code here:
        if (jtxfmail.getText().equals("Ingrese su Email")) {
            jtxfmail.setText("");
            jtxfmail.setForeground(new Color(0, 51, 153));
        }
    }//GEN-LAST:event_jtxfmailFocusGained

    private void jtxfmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxfmailFocusLost
        // TODO add your handling code here:
        if (jtxfmail.getText().isEmpty()) {
            jtxfmail.setText("Ingrese su Email");
            jtxfmail.setForeground(new Color(999999));
        }
    }//GEN-LAST:event_jtxfmailFocusLost

    private void jbtnresetpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnresetpassActionPerformed
        // TODO add your handling code here:
        // Verificar si los campos están vacíos o contienen el texto por defecto
        if (jtxfuser.getText().equals("Ingrese su Usuario") || jtxfuser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese su usuario");
            jtxfuser.requestFocusInWindow(); // Mover foco al campo de usuario
        } else if (new String(jtxfpass.getPassword()).equals("Ingrese su Contraseña") || new String(jtxfpass.getPassword()).isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese su contraseña");
            jtxfpass.requestFocusInWindow(); // Mover foco al campo de contraseña
        } else if (new String(jtxfconfpass.getPassword()).equals("Confirme su Contraseña") || new String(jtxfconfpass.getPassword()).isEmpty()) {
            JOptionPane.showMessageDialog(null, "Confirme su contraseña");
            jtxfconfpass.requestFocusInWindow(); // Mover foco al campo de contraseña
        } else if (jtxfmail.getText().equals("Ingrese su Email") || jtxfmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese su Email");
            jtxfmail.requestFocusInWindow(); // Mover foco al campo de usuario
        } else if (!isValidEmail(jtxfmail.getText())) {
            JOptionPane.showMessageDialog(null, "Ingrese un correo electrónico válido");
            jtxfmail.requestFocusInWindow(); // Mover foco al campo de email
        } else if (!new String(jtxfconfpass.getPassword()).equals(new String(jtxfpass.getPassword()))) {
            JOptionPane.showMessageDialog(null, "Contraseñas No Coinciden");
            jtxfconfpass.requestFocusInWindow(); // Mover foco al campo de contraseña
        } else if (jtxfpass.getPassword().length < 8 || jtxfconfpass.getPassword().length < 8) {
            JOptionPane.showMessageDialog(null, "Longitud de Contraseña Invalida");
            jtxfpass.requestFocusInWindow(); // Mover foco al campo de contraseña
        } else if (new String(jtxfpass.getPassword()).matches(".*\\d.*") || new String(jtxfconfpass.getPassword()).matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(null, "La contraseña no debe contener números");
            jtxfpass.requestFocusInWindow(); // Mover foco al campo de contraseña
        }else {
            // Si todas las validaciones son correctas, encriptar la contraseña
            String username = jtxfuser.getText();
            String newPassword = new String(jtxfpass.getPassword());
            String email = jtxfmail.getText();

            // Encriptar la contraseña antes de guardarla
            String encryptedPassword = encryptPassword(newPassword);
            
            // Obtener la fecha y hora actual
            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String registrationDate = now.format(formatter);

            try {
                connectionDB connection = new connectionDB();
                Connection cn = connection.Open();

                // Verificar si el correo electrónico está registrado en la base de datos
                String checkEmailQuery = "SELECT COUNT(*) FROM Dates WHERE email = ?";
                PreparedStatement checkEmailPst = cn.prepareStatement(checkEmailQuery);
                checkEmailPst.setString(1, email);

                ResultSet rs = checkEmailPst.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    // Si el correo está registrado, procedemos a actualizar la contraseña
                    String updatePasswordQuery = "UPDATE Dates SET password = ? WHERE nickname = ? AND email = ?";
                    PreparedStatement updatePst = cn.prepareStatement(updatePasswordQuery);
                    updatePst.setString(1, encryptedPassword); // Nueva contraseña encriptada
                    updatePst.setString(2, username); // Nombre de usuario
                    updatePst.setString(3, email); // Email

                    int rowsUpdated = updatePst.executeUpdate();

                    if (rowsUpdated > 0) {
                        JOptionPane.showMessageDialog(null, "Contraseña actualizada con éxito.");
                        
                        // Enviar la contraseña encriptada por correo electrónico
                        String subject = "Reinicio de Contraseña - Validación de Perfil";
                        String body = username + ",\n\n"
                                + "Se ha reiniciado tu contraseña de manera correcta. Aquí está tu codigo de validación:\n"
                                + encryptedPassword + "\n\n"
                                + "Por favor, verifica tu perfil, en el juego.";

                        clsSendEmail.sendEmail(email, subject, body);
                        
                        // Abrir un diálogo con título personalizado para que el usuario ingrese el código de verificación
                        String inputCode = JOptionPane.showInputDialog(null,
                                "Se ha enviado un código de verificación a tu correo.\nPor favor, ingresa el código de verificación:",
                                "Verificación de Reinicio de Contraseña",
                                JOptionPane.QUESTION_MESSAGE);

                        // Verificar si el código ingresado es correcto
                        if (inputCode != null && inputCode.equals(encryptedPassword)) {
                            JOptionPane.showMessageDialog(null, "Verificación exitosa. ¡Bienvenido al Juego!");

                            // Mostrar y ocultar componentes de la interfaz
                            dispose();
                            frmLogin login = new frmLogin();
                            login.setLocationRelativeTo(null);
                            login.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "El código ingresado es incorrecto. Por favor, inténtelo de nuevo.");
                        }                        
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "Usuario o correo electrónico incorrectos.");
                    }
                } else {
                    // Si el correo no está registrado, mostramos un mensaje de error
                    JOptionPane.showMessageDialog(null, "El correo electrónico no está registrado.");
                }

                cn.close();
            } catch (SQLException e) {
                System.out.println("Error al conectar a la base de datos: " + e);
                JOptionPane.showMessageDialog(null, "Error al actualizar la contraseña en la base de datos.");
            }
        }
    }//GEN-LAST:event_jbtnresetpassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmResetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmResetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmResetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmResetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmResetPass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbtnresetpass;
    private javax.swing.JLabel jlblconfpass;
    private javax.swing.JLabel jlbldatetime1;
    private javax.swing.JLabel jlbldesign;
    private javax.swing.JLabel jlblpass;
    private javax.swing.JLabel jlblresetpasst;
    private javax.swing.JPasswordField jtxfconfpass;
    private javax.swing.JTextField jtxfmail;
    private javax.swing.JPasswordField jtxfpass;
    private javax.swing.JTextField jtxfuser;
    // End of variables declaration//GEN-END:variables
}
